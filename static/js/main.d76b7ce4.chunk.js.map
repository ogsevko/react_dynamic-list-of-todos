{"version":3,"sources":["api/getData.ts","components/TodoItem.tsx","components/TodoList.tsx","App.tsx","index.tsx"],"names":["getData","API","fetch","then","response","json","fetchedData","data","catch","error","TodoItem","todo","className","type","checked","completed","title","userName","TodoList","todos","map","item","key","id","App","todosCopy","state","isLoading","filterBy","loadTodos","users","setState","usersFromServer","todosFromServer","todoCopy","userForTodo","find","user","userId","name","handleFilter","value","sort","a","b","localeCompare","this","length","onClick","onChange","event","target","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iQAAO,SAASA,EAAYC,GAC1B,OAAOC,MAAMD,GACVE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAW,OAAIA,EAAYC,QAChCC,OAAM,SAAAC,GAAK,OAAIA,KCGb,IAAMC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACvC,wBAAIC,UAAU,cACZ,2BAAOC,KAAK,WAAWC,QAASH,EAAKI,YACrC,0BAAMH,UAAU,oBAAoBD,EAAKK,OACzC,0BAAMJ,UAAU,mBAAmBD,EAAKM,YCH/BC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,wBAAIP,UAAU,QAEVO,EAAMC,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,CAAUC,IAAKD,EAAKE,GAAIZ,KAAMU,SC0HvBG,E,kDAvHb,aAAe,IAAD,8BACZ,cAAM,KAHRC,eAEc,IAMdC,MAAe,CACbP,MAAO,GACPQ,WAAW,EACXC,SAAU,IATE,EAYdC,UAAY,WACV,IAEIC,EAEJ,EAAKC,SAAS,CACZJ,WAAW,IAGb3B,EAPkB,2CAQfG,MAAK,SAAC6B,GACLF,EAAQE,KAGZhC,EAbkB,2CAcfG,MAAK,SAAC8B,GACL,EAAKF,SAAS,CACZZ,MAAOc,EAAgBb,KAAI,SAACT,GAC1B,IAAMuB,EAAQ,eAAQvB,GAChBwB,EAAcL,EAAMM,MAAK,SAAAC,GAAI,OAAIA,EAAKd,KAAOZ,EAAK2B,UAIxD,OAFAJ,EAASjB,SAAWkB,EAAcA,EAAYI,KAAO,GAE9CL,KAETP,WAAW,IAEb,WACE,EAAKF,UAAL,YAAqB,EAAKC,MAAMP,cAxC1B,EA6CdqB,aAAe,SAACC,GACA,UAAVA,GACF,EAAKV,SAAS,CACZZ,MAAO,EAAKM,UAAUiB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE3B,MAAM6B,cAAcD,EAAE5B,UAC7DY,SAAUa,IAIA,aAAVA,GACF,EAAKV,SAAS,CACZZ,MAAO,EAAKM,UAAUiB,MAAK,SAACC,EAAGC,GAC7B,OAAID,EAAE1B,UAAY2B,EAAE3B,SACX0B,EAAE1B,SAAS4B,cAAcD,EAAE3B,UAG7B,KAETW,SAAUa,IAIA,cAAVA,GACF,EAAKV,SAAS,CACZZ,MAAO,EAAKM,UAAUiB,MAAK,SAACC,EAAGC,GAC7B,OAAID,EAAE5B,YAAc6B,EAAE7B,UACb,EAGL4B,EAAE5B,WACI,EAGH,KAETa,SAAUa,KA5Ed,EAAKhB,UAAY,GAHL,E,qDAoFJ,IAAD,SACsBqB,KAAKpB,MAA1BP,EADD,EACCA,MAER,OAHO,EACQQ,UAGN,4CAGY,IAAjBR,EAAM4B,OAEN,4BACElC,KAAK,SACLmC,QAASF,KAAKjB,WAFhB,cAUF,6BACE,4BACEU,KAAK,WACLE,MAAOK,KAAKpB,MAAME,SAClBqB,SAAU,SAAAC,GAAK,OAAI,EAAKV,aAAaU,EAAMC,OAAOV,SAElD,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,YAAd,cAEF,kBAAC,EAAD,CAAUtB,MAAO2B,KAAKpB,MAAMP,a,GApHlBiC,IAAMC,WCRxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d76b7ce4.chunk.js","sourcesContent":["export function getData <T>(API: string): Promise<T[]> {\n  return fetch(API)\n    .then(response => response.json())\n    .then(fetchedData => fetchedData.data)\n    .catch(error => error);\n}\n","import React from 'react';\nimport { Todo } from './Interfaces';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => (\n  <li className=\"list__item\">\n    <input type=\"checkbox\" checked={todo.completed} />\n    <span className=\"list__item-title\">{todo.title}</span>\n    <span className=\"list__item-user\">{todo.userName}</span>\n  </li>\n);\n","import React from 'react';\nimport { Todo } from './Interfaces';\nimport { TodoItem } from './TodoItem';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <ul className=\"list\">\n    {\n      todos.map((item: Todo) => (\n        <TodoItem key={item.id} todo={item} />\n      ))\n    }\n  </ul>\n);\n","import React from 'react';\nimport './App.css';\nimport { Todo, User } from './components/Interfaces';\nimport { getData } from './api/getData';\nimport { TodoList } from './components/TodoList';\n\ntype State = {\n  todos: Todo[];\n  isLoading: boolean;\n  filterBy: string;\n};\n\nclass App extends React.Component<{}, State, Todo[]> {\n  todosCopy: Todo[];\n\n  constructor() {\n    super({});\n\n    this.todosCopy = [];\n  }\n\n  state: State = {\n    todos: [],\n    isLoading: false,\n    filterBy: '',\n  };\n\n  loadTodos = () => {\n    const API_TODOS = 'https://mate.academy/students-api/todos';\n    const API_USERS = 'https://mate.academy/students-api/users';\n    let users: User[];\n\n    this.setState({\n      isLoading: true,\n    });\n\n    getData<User>(API_USERS)\n      .then((usersFromServer: User[]) => {\n        users = usersFromServer;\n      });\n\n    getData<Todo>(API_TODOS)\n      .then((todosFromServer: Todo[]) => {\n        this.setState({\n          todos: todosFromServer.map((todo) => {\n            const todoCopy = { ...todo };\n            const userForTodo = users.find(user => user.id === todo.userId);\n\n            todoCopy.userName = userForTodo ? userForTodo.name : '';\n\n            return todoCopy;\n          }),\n          isLoading: false,\n        },\n        () => {\n          this.todosCopy = [...this.state.todos];\n        });\n      });\n  };\n\n  handleFilter = (value: string) => {\n    if (value === 'title') {\n      this.setState({\n        todos: this.todosCopy.sort((a, b) => a.title.localeCompare(b.title)),\n        filterBy: value,\n      });\n    }\n\n    if (value === 'userName') {\n      this.setState({\n        todos: this.todosCopy.sort((a, b) => {\n          if (a.userName && b.userName) {\n            return a.userName.localeCompare(b.userName);\n          }\n\n          return 0;\n        }),\n        filterBy: value,\n      });\n    }\n\n    if (value === 'completed') {\n      this.setState({\n        todos: this.todosCopy.sort((a, b) => {\n          if (a.completed === b.completed) {\n            return 0;\n          }\n\n          if (a.completed) {\n            return -1;\n          }\n\n          return 1;\n        }),\n        filterBy: value,\n      });\n    }\n  };\n\n  render() {\n    const { todos, isLoading } = this.state;\n\n    if (isLoading) {\n      return <span>Loading...</span>;\n    }\n\n    if (todos.length === 0) {\n      return (\n        <button\n          type=\"button\"\n          onClick={this.loadTodos}\n        >\n          Load todos\n        </button>\n      );\n    }\n\n    return (\n      <div>\n        <select\n          name=\"filterBy\"\n          value={this.state.filterBy}\n          onChange={event => this.handleFilter(event.target.value)}\n        >\n          <option value=\"title\">Title</option>\n          <option value=\"completed\">Completed</option>\n          <option value=\"userName\">User name</option>\n        </select>\n        <TodoList todos={this.state.todos} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}